{"ast":null,"code":"import { InjectedConnector } from \"@web3-react/injected-connector\";\nexport var getInjectedConnector = function (chainIds) {\n  return new InjectedConnector({\n    supportedChainIds: chainIds.map(function (chainId) {\n      return typeof chainId === 'string' ? parseInt(chainId) : chainId;\n    })\n  });\n};","map":{"version":3,"sources":["/Volumes/Work/projects/rome/web3-example/ui-common/dist/web3/util.js"],"names":["InjectedConnector","getInjectedConnector","chainIds","supportedChainIds","map","chainId","parseInt"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,QAAV,EAAoB;AAAE,SAAQ,IAAIF,iBAAJ,CAAsB;AAClFG,IAAAA,iBAAiB,EAAED,QAAQ,CAACE,GAAT,CAAa,UAAUC,OAAV,EAAmB;AAC/C,aAAO,OAAOA,OAAP,KAAmB,QAAnB,GAA8BC,QAAQ,CAACD,OAAD,CAAtC,GAAkDA,OAAzD;AACH,KAFkB;AAD+D,GAAtB,CAAR;AAIlD,CAJC","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\nexport var getInjectedConnector = function (chainIds) { return (new InjectedConnector({\n    supportedChainIds: chainIds.map(function (chainId) {\n        return typeof chainId === 'string' ? parseInt(chainId) : chainId;\n    }),\n})); };\n"]},"metadata":{},"sourceType":"module"}