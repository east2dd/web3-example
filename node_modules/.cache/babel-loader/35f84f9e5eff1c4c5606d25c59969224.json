{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSwitchNetwork = void 0;\n\nconst react_1 = require(\"react\");\n\nconst util_1 = require(\"./util\");\n\nconst useSwitchNetwork = () => {\n  const ref = react_1.useRef(false);\n  const [loading, setLoading] = react_1.useState(false);\n  const [error, setError] = react_1.useState();\n  const switchNetwork = react_1.useCallback(({\n    chainId,\n    chainName,\n    nativeCurrency,\n    rpcUrl,\n    blockExplorerUrl\n  }) => {\n    setLoading(true);\n    util_1.getInjectedConnector([chainId]).getProvider().then(provider => {\n      provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [{\n          chainId,\n          chainName,\n          nativeCurrency,\n          rpcUrls: [rpcUrl],\n          blockExplorerUrls: [blockExplorerUrl]\n        }]\n      }).catch(err => {\n        console.log(err);\n\n        if (ref.current) {\n          setError(err);\n        }\n      }).then(() => {\n        if (ref.current) {\n          setLoading(false);\n        }\n      });\n    });\n  }, []);\n  react_1.useEffect(() => {\n    ref.current = true;\n    return () => {\n      ref.current = false;\n    };\n  }, []);\n  return {\n    loading,\n    error,\n    switchNetwork\n  };\n};\n\nexports.useSwitchNetwork = useSwitchNetwork;","map":{"version":3,"sources":["/Volumes/Work/projects/rome/web3-example/ui-common/dist/web3/useSwitchNetwork.js"],"names":["Object","defineProperty","exports","value","useSwitchNetwork","react_1","require","util_1","ref","useRef","loading","setLoading","useState","error","setError","switchNetwork","useCallback","chainId","chainName","nativeCurrency","rpcUrl","blockExplorerUrl","getInjectedConnector","getProvider","then","provider","request","method","params","rpcUrls","blockExplorerUrls","catch","err","console","log","current","useEffect"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMF,gBAAgB,GAAG,MAAM;AAC3B,QAAMI,GAAG,GAAGH,OAAO,CAACI,MAAR,CAAe,KAAf,CAAZ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,OAAO,CAACO,QAAR,CAAiB,KAAjB,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,OAAO,CAACO,QAAR,EAA1B;AACA,QAAMG,aAAa,GAAGV,OAAO,CAACW,WAAR,CAAoB,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,cAAtB;AAAsCC,IAAAA,MAAtC;AAA8CC,IAAAA;AAA9C,GAAD,KAAuE;AAC7GV,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,IAAAA,MAAM,CAACe,oBAAP,CAA4B,CAACL,OAAD,CAA5B,EAAuCM,WAAvC,GAAqDC,IAArD,CAA2DC,QAAD,IAAc;AACpEA,MAAAA,QAAQ,CACHC,OADL,CACa;AACTC,QAAAA,MAAM,EAAE,yBADC;AAETC,QAAAA,MAAM,EAAE,CACJ;AACIX,UAAAA,OADJ;AAEIC,UAAAA,SAFJ;AAGIC,UAAAA,cAHJ;AAIIU,UAAAA,OAAO,EAAE,CAACT,MAAD,CAJb;AAKIU,UAAAA,iBAAiB,EAAE,CAACT,gBAAD;AALvB,SADI;AAFC,OADb,EAaKU,KAbL,CAaYC,GAAD,IAAS;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIxB,GAAG,CAAC2B,OAAR,EAAiB;AACbrB,UAAAA,QAAQ,CAACkB,GAAD,CAAR;AACH;AACJ,OAlBD,EAmBKR,IAnBL,CAmBU,MAAM;AACZ,YAAIhB,GAAG,CAAC2B,OAAR,EAAiB;AACbxB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,OAvBD;AAwBH,KAzBD;AA0BH,GA5BqB,EA4BnB,EA5BmB,CAAtB;AA6BAN,EAAAA,OAAO,CAAC+B,SAAR,CAAkB,MAAM;AACpB5B,IAAAA,GAAG,CAAC2B,OAAJ,GAAc,IAAd;AACA,WAAO,MAAM;AACT3B,MAAAA,GAAG,CAAC2B,OAAJ,GAAc,KAAd;AACH,KAFD;AAGH,GALD,EAKG,EALH;AAMA,SAAO;AAAEzB,IAAAA,OAAF;AAAWG,IAAAA,KAAX;AAAkBE,IAAAA;AAAlB,GAAP;AACH,CAxCD;;AAyCAb,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSwitchNetwork = void 0;\nconst react_1 = require(\"react\");\nconst util_1 = require(\"./util\");\nconst useSwitchNetwork = () => {\n    const ref = react_1.useRef(false);\n    const [loading, setLoading] = react_1.useState(false);\n    const [error, setError] = react_1.useState();\n    const switchNetwork = react_1.useCallback(({ chainId, chainName, nativeCurrency, rpcUrl, blockExplorerUrl, }) => {\n        setLoading(true);\n        util_1.getInjectedConnector([chainId]).getProvider().then((provider) => {\n            provider\n                .request({\n                method: 'wallet_addEthereumChain',\n                params: [\n                    {\n                        chainId,\n                        chainName,\n                        nativeCurrency,\n                        rpcUrls: [rpcUrl],\n                        blockExplorerUrls: [blockExplorerUrl],\n                    },\n                ],\n            })\n                .catch((err) => {\n                console.log(err);\n                if (ref.current) {\n                    setError(err);\n                }\n            })\n                .then(() => {\n                if (ref.current) {\n                    setLoading(false);\n                }\n            });\n        });\n    }, []);\n    react_1.useEffect(() => {\n        ref.current = true;\n        return () => {\n            ref.current = false;\n        };\n    }, []);\n    return { loading, error, switchNetwork };\n};\nexports.useSwitchNetwork = useSwitchNetwork;\n"]},"metadata":{},"sourceType":"script"}